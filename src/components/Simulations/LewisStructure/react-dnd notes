REACT DND NOTES
import react dnd and react dnd backend html!!!!!


LewisStructure.js
import React from 'react';
import './LewisStructure.css';
import withAuthorization from './../../Account/withAuthorization';
import { DndProvider } from 'react-dnd';
import { HTML5Backend } from 'react-dnd-html5-backend';
import DragDrop from './DragDrop';

const LewisStructure = () => {

  return (
    <DndProvider backend={HTML5Backend}>
      <div>
        <DragDrop />
      </div>
    </DndProvider>
  )
};




export default withAuthorization(LewisStructure);


DragDrop.js
import React, { useState } from "react";
import Element from "./Element";
import { useDrop } from "react-dnd";


function DragDrop() {
  const lsElements = [
    {
      id: 1, //ids are atomic numbers
      symbol: 'H',
      valenceElectrons: 1,
      octet: 2,
    },
    {
      id: 5,
      symbol: 'B',
      valenceElectrons: 3,
      octet: 8,
    },
    {
      id: 6,
      symbol: 'C',
      valenceElectrons: 4,
      octet: 8,

    },
    {
      id: 7,
      symbol: 'N',
      valenceElectrons: 5,
      octet: 8,
    },
    {
      id: 8,
      symbol: 'O',
      valenceElectrons: 6,
      octet: 8,
    },
    {
      id: 9,
      symbol: 'F',
      valenceElectrons: 7,
      octet: 8,

    },
    {
      id: 17,
      symbol: 'Cl',
      valenceElectrons: 7,
      octet: 8,

    },
  ];

  const [lsBoard, setLsBoard] = useState([]); //monitors which elements are in the ls container

  const [{ isOver }, drop] = useDrop(() => ({
    accept: "element-div",
    drop: (element) => addElementToBoard(element.id), //function whenever we drop an item, id which element we are adding to the board
    collect: (monitor) => ({ 
      isOver: !!monitor.isOver(),
    }),
  }))

  const addElementToBoard = (id) => { //id element and add to our board
    const elementList = lsElements.filter((element) => id === element.id);
    setLsBoard((lsBoard) => [...lsBoard, elementList[0]]); //make copy of state with new element added
  }
  return (
    <div className='simulation-page'>
      <h1>Lewis Structures</h1>
      <div className='simulation-container'>
        <div className="LS-element-container">
          {lsElements.map((element) => (
            <Element key={element.id} symbol={element.symbol} id={element.id} />
          ))}
        </div>
        <div className="LS-container" ref={drop}>
          {lsBoard.map((element) => (
            <Element key={element.id} symbol={element.symbol} id={element.id} />
          ))}
        </div>
      </div>
    </div>
  );
}

export default DragDrop;

Element.js
import React from "react";
import { useDrag } from 'react-dnd';


function Element({ id, symbol }) {
  const [{ isDragging }, drag] = useDrag(() => ({
    type: "element-div", //id the type of object you are moving.. Made up the name
    // collect: (monitor) => ({ //def prop that is accessible, pass isDragging if we want to monitor if we are dragging an element. This is good for conditional styling... Dont need yet
    //   isDragging: !!monitor.isDragging(),
    // }),
    item: {id: id}
  }));

  return (
    <div className="LS-element" ref={drag}>
      <p>{symbol}</p>
    </div>
  )
}

export default Element

